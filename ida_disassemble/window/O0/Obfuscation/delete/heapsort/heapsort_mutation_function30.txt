; Function: sub_1400026D0
; Start: 0x1400026D0, End: 0x14000274B

0x1400026D0: mov     r8, cs:off_1400043A0
0x1400026D7: xor     eax, eax
0x1400026D9: cmp     word ptr [r8], 5A4Dh
0x1400026DF: jnz     short locret_1400026F0
0x1400026E1: movsxd  rdx, dword ptr [r8+3Ch]
0x1400026E5: add     rdx, r8
0x1400026E8: cmp     dword ptr [rdx], 4550h
0x1400026EE: jz      short loc_1400026F8
locret_1400026F0:
0x1400026F0: retn
loc_1400026F8:
0x1400026F8: cmp     word ptr [rdx+18h], 20Bh
0x1400026FE: jnz     short locret_1400026F0
0x140002700: movzx   r8d, word ptr [rdx+6]
0x140002705: test    r8w, r8w
0x140002709: jz      short locret_1400026F0
0x14000270B: movzx   eax, word ptr [rdx+14h]
0x14000270F: lea     rax, [rdx+rax+18h]
0x140002714: lea     edx, [r8-1]
0x140002718: lea     rdx, [rdx+rdx*4]
0x14000271C: lea     rdx, [rax+rdx*8+28h]
0x140002721: nop     dword ptr [rax+00h]
0x140002725: nop     word ptr [rax+rax+00000000h]
loc_140002730:
0x140002730: test    byte ptr [rax+27h], 20h
0x140002734: jz      short loc_14000273F
0x140002736: test    rcx, rcx
0x140002739: jz      short locret_1400026F0
0x14000273B: sub     rcx, 1
loc_14000273F:
0x14000273F: add     rax, 28h ; '('
0x140002743: cmp     rdx, rax
0x140002746: jnz     short loc_140002730
0x140002748: xor     eax, eax
0x14000274A: retn