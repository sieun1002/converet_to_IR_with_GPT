; Function: sub_140001010
; Start: 0x140001010, End: 0x1400013D9

0x140001010: push    r15
0x140001012: push    r14
0x140001014: push    r13
0x140001016: push    r12
0x140001018: push    rbp
0x140001019: push    rdi
0x14000101A: push    rsi
0x14000101B: push    rbx
0x14000101C: sub     rsp, 58h
0x140001020: mov     eax, 30h ; '0'
0x140001025: mov     rax, gs:[eax]
0x14000102A: mov     rsi, [rax+8]
0x14000102E: mov     rbx, cs:off_140004450
0x140001035: mov     rdi, cs:__imp_Sleep
0x14000103C: jmp     short loc_140001050
loc_140001040:
0x140001040: cmp     rsi, rax
0x140001043: jz      loc_140001100
0x140001049: mov     ecx, 3E8h; dwMilliseconds
0x14000104E: call    rdi ; __imp_Sleep
loc_140001050:
0x140001050: xor     eax, eax
0x140001052: lock cmpxchg [rbx], rsi
0x140001057: jnz     short loc_140001040
0x140001059: xor     r14d, r14d
loc_14000105C:
0x14000105C: mov     rbp, cs:off_140004460
0x140001063: mov     eax, [rbp+0]
0x140001066: cmp     eax, 1
0x140001069: jz      loc_1400013C8
0x14000106F: mov     eax, [rbp+0]
0x140001072: test    eax, eax
0x140001074: jz      loc_140001110
0x14000107A: mov     cs:dword_140007004, 1
loc_140001084:
0x140001084: test    r14d, r14d
0x140001087: jz      loc_140001328
loc_14000108D:
0x14000108D: mov     rax, cs:off_1400043D0
0x140001094: mov     rax, [rax]
0x140001097: test    rax, rax
0x14000109A: jz      short loc_1400010A8
0x14000109C: xor     r8d, r8d
0x14000109F: mov     edx, 2
0x1400010A4: xor     ecx, ecx
0x1400010A6: call    rax
loc_1400010A8:
0x1400010A8: call    sub_140002A20
0x1400010AD: mov     r8, cs:qword_140007010
0x1400010B4: mov     ecx, cs:dword_140007020
0x1400010BA: mov     [rax], r8
0x1400010BD: mov     rdx, cs:qword_140007018
0x1400010C4: call    sub_14000171D
0x1400010C9: mov     ecx, cs:dword_140007008
0x1400010CF: test    ecx, ecx
0x1400010D1: jz      loc_1400013D2
0x1400010D7: mov     edx, cs:dword_140007004
0x1400010DD: test    edx, edx
0x1400010DF: jz      loc_140001310
loc_1400010E5:
0x1400010E5: add     rsp, 58h
0x1400010E9: pop     rbx
0x1400010EA: pop     rsi
0x1400010EB: pop     rdi
0x1400010EC: pop     rbp
0x1400010ED: pop     r12
0x1400010EF: pop     r13
0x1400010F1: pop     r14
0x1400010F3: pop     r15
0x1400010F5: retn
loc_140001100:
0x140001100: mov     r14d, 1
0x140001106: jmp     loc_14000105C
loc_140001110:
0x140001110: mov     dword ptr [rbp+0], 1
0x140001117: call    sub_140001CA0
0x14000111C: lea     rcx, TopLevelExceptionFilter; lpTopLevelExceptionFilter
0x140001123: call    cs:__imp_SetUnhandledExceptionFilter
0x140001129: mov     rdx, cs:off_140004440
0x140001130: lea     rcx, Handler; Handler
0x140001137: mov     [rdx], rax
0x14000113A: call    _set_invalid_parameter_handler
0x14000113F: call    sub_1400024E0
0x140001144: mov     rax, cs:off_140004410
0x14000114B: xor     ecx, ecx
0x14000114D: mov     dword ptr [rax], 1
0x140001153: mov     rax, cs:off_140004420
0x14000115A: mov     dword ptr [rax], 1
0x140001160: mov     rax, cs:off_140004430
0x140001167: mov     dword ptr [rax], 1
0x14000116D: mov     rax, cs:off_1400043A0
0x140001174: cmp     word ptr [rax], 5A4Dh
0x140001179: jnz     short loc_1400011C0
0x14000117B: movsxd  rdx, dword ptr [rax+3Ch]
0x14000117F: add     rax, rdx
0x140001182: cmp     dword ptr [rax], 4550h
0x140001188: jnz     short loc_1400011C0
0x14000118A: movzx   edx, word ptr [rax+18h]
0x14000118E: cmp     dx, 10Bh
0x140001193: jz      loc_1400013AA
0x140001199: cmp     dx, 20Bh
0x14000119E: jnz     short loc_1400011C0
0x1400011A0: cmp     dword ptr [rax+84h], 0Eh
0x1400011A7: jbe     short loc_1400011C0
0x1400011A9: mov     r9d, [rax+0F8h]
0x1400011B0: xor     ecx, ecx
0x1400011B2: test    r9d, r9d
0x1400011B5: setnz   cl
0x1400011B8: nop     dword ptr [rax+rax+00000000h]
loc_1400011C0:
0x1400011C0: mov     rax, cs:off_140004400
0x1400011C7: mov     cs:dword_140007008, ecx
0x1400011CD: mov     r8d, [rax]
0x1400011D0: test    r8d, r8d
0x1400011D3: jnz     loc_140001338
0x1400011D9: mov     ecx, 1; Type
0x1400011DE: call    _set_app_type
loc_1400011E3:
0x1400011E3: call    __p__fmode
0x1400011E8: mov     rdx, cs:off_1400044D0
0x1400011EF: mov     edx, [rdx]
0x1400011F1: mov     [rax], edx
0x1400011F3: call    __p__commode
0x1400011F8: mov     rdx, cs:off_1400044B0
0x1400011FF: mov     edx, [rdx]
0x140001201: mov     [rax], edx
0x140001203: call    sub_140001910
0x140001208: test    eax, eax
0x14000120A: js      loc_140001301
0x140001210: mov     rax, cs:off_140004380
0x140001217: cmp     dword ptr [rax], 1
0x14000121A: jz      loc_140001399
loc_140001220:
0x140001220: mov     rax, cs:off_1400043E0
0x140001227: cmp     dword ptr [rax], 0FFFFFFFFh
0x14000122A: jz      loc_14000138A
loc_140001230:
0x140001230: mov     rdx, cs:Last; Last
0x140001237: mov     rcx, cs:First; First
0x14000123E: call    _initterm_e
0x140001243: test    eax, eax
0x140001245: jnz     loc_140001380
0x14000124B: mov     rax, cs:off_140004500
0x140001252: lea     r8, qword_140007010
0x140001259: lea     rdx, qword_140007018
0x140001260: lea     rcx, dword_140007020
0x140001267: mov     eax, [rax]
0x140001269: mov     [rsp+98h+var_4C], eax
0x14000126D: mov     rax, cs:off_1400044C0
0x140001274: mov     r9d, [rax]
0x140001277: lea     rax, [rsp+98h+var_4C]
0x14000127C: mov     [rsp+98h+var_78], rax
0x140001281: call    sub_140002A60
0x140001286: test    eax, eax
0x140001288: js      short loc_140001301
0x14000128A: movsxd  r12, cs:dword_140007020
0x140001291: lea     ecx, [r12+1]
0x140001296: movsxd  rcx, ecx
0x140001299: shl     rcx, 3; Size
0x14000129D: call    malloc
0x1400012A2: mov     r13, rax
0x1400012A5: test    rax, rax
0x1400012A8: jz      short loc_140001301
0x1400012AA: test    r12d, r12d
0x1400012AD: jle     loc_14000134C
0x1400012B3: mov     r15, cs:qword_140007018
0x1400012BA: mov     esi, 1
0x1400012BF: jmp     short loc_1400012E1
loc_1400012C8:
0x1400012C8: mov     rdx, [r15+rsi*8-8]; Src
0x1400012CD: mov     r8, rdi; Size
0x1400012D0: mov     rcx, rax; void *
0x1400012D3: call    memcpy
0x1400012D8: cmp     r12, rsi
0x1400012DB: jz      short loc_140001347
0x1400012DD: add     rsi, 1
loc_1400012E1:
0x1400012E1: mov     rcx, [r15+rsi*8-8]; Str
0x1400012E6: call    strlen
0x1400012EB: lea     rdi, [rax+1]
0x1400012EF: mov     rcx, rdi; Size
0x1400012F2: call    malloc
0x1400012F7: mov     [r13+rsi*8-8], rax
0x1400012FC: test    rax, rax
0x1400012FF: jnz     short loc_1400012C8
loc_140001301:
0x140001301: mov     ecx, 8
0x140001306: call    sub_140002A30
loc_140001310:
0x140001310: mov     [rsp+98h+var_5C], eax
0x140001314: call    _cexit
0x140001319: mov     eax, [rsp+98h+var_5C]
0x14000131D: jmp     loc_1400010E5
loc_140001328:
0x140001328: xor     eax, eax
0x14000132A: xchg    rax, [rbx]
0x14000132D: jmp     loc_14000108D
loc_140001338:
0x140001338: mov     ecx, 2; Type
0x14000133D: call    _set_app_type
0x140001342: jmp     loc_1400011E3
loc_140001347:
0x140001347: lea     rax, [r13+r12*8+0]
loc_14000134C:
0x14000134C: mov     qword ptr [rax], 0
0x140001353: mov     rdx, cs:off_140004480; Last
0x14000135A: mov     rcx, cs:off_140004470; First
0x140001361: mov     cs:qword_140007018, r13
0x140001368: call    _initterm
0x14000136D: call    sub_1400018F0
0x140001372: mov     dword ptr [rbp+0], 2
0x140001379: jmp     loc_140001084
loc_140001380:
0x140001380: mov     eax, 0FFh
0x140001385: jmp     loc_1400010E5
loc_14000138A:
0x14000138A: mov     ecx, 0FFFFFFFFh; Flag
0x14000138F: call    _configthreadlocale
0x140001394: jmp     loc_140001230
loc_140001399:
0x140001399: lea     rcx, sub_1400019D0
0x1400013A0: call    sub_140002070
0x1400013A5: jmp     loc_140001220
loc_1400013AA:
0x1400013AA: cmp     dword ptr [rax+74h], 0Eh
0x1400013AE: jbe     loc_1400011C0
0x1400013B4: mov     r10d, [rax+0E8h]
0x1400013BB: xor     ecx, ecx
0x1400013BD: test    r10d, r10d
0x1400013C0: setnz   cl
0x1400013C3: jmp     loc_1400011C0
loc_1400013C8:
0x1400013C8: mov     ecx, 1Fh
0x1400013CD: call    sub_140002A30
loc_1400013D2:
0x1400013D2: mov     ecx, eax; Code
0x1400013D4: call    exit