; Function: merge_sort
; Start: 0x140001450, End: 0x14000165E

0x140001450: push    rbp
0x140001451: mov     rbp, rsp
0x140001454: add     rsp, 0FFFFFFFFFFFFFF80h
0x140001458: mov     [rbp+arg_0], rcx
0x14000145C: mov     [rbp+arg_8], rdx
0x140001460: cmp     [rbp+arg_8], 1
0x140001465: jbe     loc_140001654
0x14000146B: mov     rax, [rbp+arg_8]
0x14000146F: shl     rax, 2
0x140001473: mov     rcx, rax; Size
0x140001476: call    malloc
0x14000147B: mov     [rbp+Block], rax
0x14000147F: cmp     [rbp+Block], 0
0x140001484: jz      loc_140001657
0x14000148A: mov     rax, [rbp+arg_0]
0x14000148E: mov     [rbp+Src], rax
0x140001492: mov     rax, [rbp+Block]
0x140001496: mov     [rbp+var_10], rax
0x14000149A: mov     [rbp+var_18], 1
0x1400014A2: jmp     loc_14000160F
loc_1400014A7:
0x1400014A7: mov     [rbp+var_20], 0
0x1400014AF: jmp     loc_1400015E5
loc_1400014B4:
0x1400014B4: mov     rax, [rbp+var_20]
0x1400014B8: mov     [rbp+var_60], rax
0x1400014BC: mov     rdx, [rbp+var_20]
0x1400014C0: mov     rax, [rbp+var_18]
0x1400014C4: add     rax, rdx
0x1400014C7: mov     [rbp+var_28], rax
0x1400014CB: mov     rax, [rbp+var_28]
0x1400014CF: cmp     [rbp+arg_8], rax
0x1400014D3: jnb     short loc_1400014DD
0x1400014D5: mov     rax, [rbp+arg_8]
0x1400014D9: mov     [rbp+var_28], rax
loc_1400014DD:
0x1400014DD: mov     rax, [rbp+var_18]
0x1400014E1: lea     rdx, [rax+rax]
0x1400014E5: mov     rax, [rbp+var_20]
0x1400014E9: add     rax, rdx
0x1400014EC: mov     [rbp+var_30], rax
0x1400014F0: mov     rax, [rbp+var_30]
0x1400014F4: cmp     [rbp+arg_8], rax
0x1400014F8: jnb     short loc_140001502
0x1400014FA: mov     rax, [rbp+arg_8]
0x1400014FE: mov     [rbp+var_30], rax
loc_140001502:
0x140001502: mov     rax, [rbp+var_60]
0x140001506: mov     [rbp+var_38], rax
0x14000150A: mov     rax, [rbp+var_28]
0x14000150E: mov     [rbp+var_40], rax
0x140001512: mov     rax, [rbp+var_60]
0x140001516: mov     [rbp+var_48], rax
0x14000151A: jmp     loc_1400015CC
loc_14000151F:
0x14000151F: mov     rax, [rbp+var_38]
0x140001523: cmp     rax, [rbp+var_28]
0x140001527: jnb     short loc_140001595
0x140001529: mov     rax, [rbp+var_40]
0x14000152D: cmp     rax, [rbp+var_30]
0x140001531: jnb     short loc_140001561
0x140001533: mov     rax, [rbp+var_38]
0x140001537: lea     rdx, ds:0[rax*4]
0x14000153F: mov     rax, [rbp+Src]
0x140001543: add     rax, rdx
0x140001546: mov     edx, [rax]
0x140001548: mov     rax, [rbp+var_40]
0x14000154C: lea     rcx, ds:0[rax*4]
0x140001554: mov     rax, [rbp+Src]
0x140001558: add     rax, rcx
0x14000155B: mov     eax, [rax]
0x14000155D: cmp     edx, eax
0x14000155F: jg      short loc_140001595
loc_140001561:
0x140001561: mov     rax, [rbp+var_38]
0x140001565: lea     rdx, [rax+1]
0x140001569: mov     [rbp+var_38], rdx
0x14000156D: lea     rdx, ds:0[rax*4]
0x140001575: mov     rax, [rbp+Src]
0x140001579: add     rax, rdx
0x14000157C: mov     rdx, [rbp+var_48]
0x140001580: lea     rcx, ds:0[rdx*4]
0x140001588: mov     rdx, [rbp+var_10]
0x14000158C: add     rdx, rcx
0x14000158F: mov     eax, [rax]
0x140001591: mov     [rdx], eax
0x140001593: jmp     short loc_1400015C7
loc_140001595:
0x140001595: mov     rax, [rbp+var_40]
0x140001599: lea     rdx, [rax+1]
0x14000159D: mov     [rbp+var_40], rdx
0x1400015A1: lea     rdx, ds:0[rax*4]
0x1400015A9: mov     rax, [rbp+Src]
0x1400015AD: add     rax, rdx
0x1400015B0: mov     rdx, [rbp+var_48]
0x1400015B4: lea     rcx, ds:0[rdx*4]
0x1400015BC: mov     rdx, [rbp+var_10]
0x1400015C0: add     rdx, rcx
0x1400015C3: mov     eax, [rax]
0x1400015C5: mov     [rdx], eax
loc_1400015C7:
0x1400015C7: add     [rbp+var_48], 1
loc_1400015CC:
0x1400015CC: mov     rax, [rbp+var_48]
0x1400015D0: cmp     rax, [rbp+var_30]
0x1400015D4: jb      loc_14000151F
0x1400015DA: mov     rax, [rbp+var_18]
0x1400015DE: add     rax, rax
0x1400015E1: add     [rbp+var_20], rax
loc_1400015E5:
0x1400015E5: mov     rax, [rbp+var_20]
0x1400015E9: cmp     rax, [rbp+arg_8]
0x1400015ED: jb      loc_1400014B4
0x1400015F3: mov     rax, [rbp+Src]
0x1400015F7: mov     [rbp+var_58], rax
0x1400015FB: mov     rax, [rbp+var_10]
0x1400015FF: mov     [rbp+Src], rax
0x140001603: mov     rax, [rbp+var_58]
0x140001607: mov     [rbp+var_10], rax
0x14000160B: shl     [rbp+var_18], 1
loc_14000160F:
0x14000160F: mov     rax, [rbp+var_18]
0x140001613: cmp     rax, [rbp+arg_8]
0x140001617: jb      loc_1400014A7
0x14000161D: mov     rax, [rbp+Src]
0x140001621: cmp     rax, [rbp+arg_0]
0x140001625: jz      short loc_140001646
0x140001627: mov     rax, [rbp+arg_8]
0x14000162B: lea     rcx, ds:0[rax*4]
0x140001633: mov     rdx, [rbp+Src]; Src
0x140001637: mov     rax, [rbp+arg_0]
0x14000163B: mov     r8, rcx; Size
0x14000163E: mov     rcx, rax; void *
0x140001641: call    memcpy
loc_140001646:
0x140001646: mov     rax, [rbp+Block]
0x14000164A: mov     rcx, rax; Block
0x14000164D: call    free
0x140001652: jmp     short loc_140001658
loc_140001654:
0x140001654: nop
0x140001655: jmp     short loc_140001658
loc_140001657:
0x140001657: nop
loc_140001658:
0x140001658: sub     rsp, 0FFFFFFFFFFFFFF80h
0x14000165C: pop     rbp
0x14000165D: retn