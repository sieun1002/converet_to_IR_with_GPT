; Function: heap_sort
; Start: 0x1189, End: 0x144b

0x1189: endbr64
0x118d: push    rbp
0x118e: mov     rbp, rsp
0x1191: mov     [rbp+var_68], rdi
0x1195: mov     [rbp+var_70], rsi
0x1199: cmp     [rbp+var_70], 1
0x119e: jbe     loc_1448
0x11a4: mov     rax, [rbp+var_70]
0x11a8: shr     rax, 1
0x11ab: mov     [rbp+var_50], rax
0x11af: jmp     loc_12C4
0x11b4: mov     rax, [rbp+var_50]
0x11b8: mov     [rbp+var_48], rax
0x11bc: mov     rax, [rbp+var_48]
0x11c0: add     rax, rax
0x11c3: add     rax, 1
0x11c7: mov     [rbp+var_18], rax
0x11cb: mov     rax, [rbp+var_18]
0x11cf: cmp     rax, [rbp+var_70]
0x11d3: jnb     loc_12C0
0x11d9: mov     rax, [rbp+var_18]
0x11dd: add     rax, 1
0x11e1: mov     [rbp+var_10], rax
0x11e5: mov     rax, [rbp+var_10]
0x11e9: cmp     rax, [rbp+var_70]
0x11ed: jnb     short loc_1223
0x11ef: mov     rax, [rbp+var_10]
0x11f3: lea     rdx, ds:0[rax*4]
0x11fb: mov     rax, [rbp+var_68]
0x11ff: add     rax, rdx
0x1202: mov     edx, [rax]
0x1204: mov     rax, [rbp+var_18]
0x1208: lea     rcx, ds:0[rax*4]
0x1210: mov     rax, [rbp+var_68]
0x1214: add     rax, rcx
0x1217: mov     eax, [rax]
0x1219: cmp     edx, eax
0x121b: jle     short loc_1223
0x121d: mov     rax, [rbp+var_10]
0x1221: jmp     short loc_1227
0x1223: mov     rax, [rbp+var_18]
0x1227: mov     [rbp+var_8], rax
0x122b: mov     rax, [rbp+var_48]
0x122f: lea     rdx, ds:0[rax*4]
0x1237: mov     rax, [rbp+var_68]
0x123b: add     rax, rdx
0x123e: mov     edx, [rax]
0x1240: mov     rax, [rbp+var_8]
0x1244: lea     rcx, ds:0[rax*4]
0x124c: mov     rax, [rbp+var_68]
0x1250: add     rax, rcx
0x1253: mov     eax, [rax]
0x1255: cmp     edx, eax
0x1257: jge     short loc_12C3
0x1259: mov     rax, [rbp+var_48]
0x125d: lea     rdx, ds:0[rax*4]
0x1265: mov     rax, [rbp+var_68]
0x1269: add     rax, rdx
0x126c: mov     eax, [rax]
0x126e: mov     [rbp+var_54], eax
0x1271: mov     rax, [rbp+var_8]
0x1275: lea     rdx, ds:0[rax*4]
0x127d: mov     rax, [rbp+var_68]
0x1281: add     rax, rdx
0x1284: mov     rdx, [rbp+var_48]
0x1288: lea     rcx, ds:0[rdx*4]
0x1290: mov     rdx, [rbp+var_68]
0x1294: add     rdx, rcx
0x1297: mov     eax, [rax]
0x1299: mov     [rdx], eax
0x129b: mov     rax, [rbp+var_8]
0x129f: lea     rdx, ds:0[rax*4]
0x12a7: mov     rax, [rbp+var_68]
0x12ab: add     rdx, rax
0x12ae: mov     eax, [rbp+var_54]
0x12b1: mov     [rdx], eax
0x12b3: mov     rax, [rbp+var_8]
0x12b7: mov     [rbp+var_48], rax
0x12bb: jmp     loc_11BC
0x12c0: nop
0x12c1: jmp     short loc_12C4
0x12c3: nop
0x12c4: mov     rax, [rbp+var_50]
0x12c8: lea     rdx, [rax-1]
0x12cc: mov     [rbp+var_50], rdx
0x12d0: test    rax, rax
0x12d3: jnz     loc_11B4
0x12d9: mov     rax, [rbp+var_70]
0x12dd: sub     rax, 1
0x12e1: mov     [rbp+var_40], rax
0x12e5: jmp     loc_143B
0x12ea: mov     rax, [rbp+var_68]
0x12ee: mov     eax, [rax]
0x12f0: mov     [rbp+var_5C], eax
0x12f3: mov     rax, [rbp+var_40]
0x12f7: lea     rdx, ds:0[rax*4]
0x12ff: mov     rax, [rbp+var_68]
0x1303: add     rax, rdx
0x1306: mov     edx, [rax]
0x1308: mov     rax, [rbp+var_68]
0x130c: mov     [rax], edx
0x130e: mov     rax, [rbp+var_40]
0x1312: lea     rdx, ds:0[rax*4]
0x131a: mov     rax, [rbp+var_68]
0x131e: add     rdx, rax
0x1321: mov     eax, [rbp+var_5C]
0x1324: mov     [rdx], eax
0x1326: mov     [rbp+var_38], 0
0x132e: mov     rax, [rbp+var_38]
0x1332: add     rax, rax
0x1335: add     rax, 1
0x1339: mov     [rbp+var_30], rax
0x133d: mov     rax, [rbp+var_30]
0x1341: cmp     rax, [rbp+var_40]
0x1345: jnb     loc_1432
0x134b: mov     rax, [rbp+var_30]
0x134f: add     rax, 1
0x1353: mov     [rbp+var_28], rax
0x1357: mov     rax, [rbp+var_28]
0x135b: cmp     rax, [rbp+var_40]
0x135f: jnb     short loc_1395
0x1361: mov     rax, [rbp+var_28]
0x1365: lea     rdx, ds:0[rax*4]
0x136d: mov     rax, [rbp+var_68]
0x1371: add     rax, rdx
0x1374: mov     edx, [rax]
0x1376: mov     rax, [rbp+var_30]
0x137a: lea     rcx, ds:0[rax*4]
0x1382: mov     rax, [rbp+var_68]
0x1386: add     rax, rcx
0x1389: mov     eax, [rax]
0x138b: cmp     edx, eax
0x138d: jle     short loc_1395
0x138f: mov     rax, [rbp+var_28]
0x1393: jmp     short loc_1399
0x1395: mov     rax, [rbp+var_30]
0x1399: mov     [rbp+var_20], rax
0x139d: mov     rax, [rbp+var_38]
0x13a1: lea     rdx, ds:0[rax*4]
0x13a9: mov     rax, [rbp+var_68]
0x13ad: add     rax, rdx
0x13b0: mov     edx, [rax]
0x13b2: mov     rax, [rbp+var_20]
0x13b6: lea     rcx, ds:0[rax*4]
0x13be: mov     rax, [rbp+var_68]
0x13c2: add     rax, rcx
0x13c5: mov     eax, [rax]
0x13c7: cmp     edx, eax
0x13c9: jge     short loc_1435
0x13cb: mov     rax, [rbp+var_38]
0x13cf: lea     rdx, ds:0[rax*4]
0x13d7: mov     rax, [rbp+var_68]
0x13db: add     rax, rdx
0x13de: mov     eax, [rax]
0x13e0: mov     [rbp+var_58], eax
0x13e3: mov     rax, [rbp+var_20]
0x13e7: lea     rdx, ds:0[rax*4]
0x13ef: mov     rax, [rbp+var_68]
0x13f3: add     rax, rdx
0x13f6: mov     rdx, [rbp+var_38]
0x13fa: lea     rcx, ds:0[rdx*4]
0x1402: mov     rdx, [rbp+var_68]
0x1406: add     rdx, rcx
0x1409: mov     eax, [rax]
0x140b: mov     [rdx], eax
0x140d: mov     rax, [rbp+var_20]
0x1411: lea     rdx, ds:0[rax*4]
0x1419: mov     rax, [rbp+var_68]
0x141d: add     rdx, rax
0x1420: mov     eax, [rbp+var_58]
0x1423: mov     [rdx], eax
0x1425: mov     rax, [rbp+var_20]
0x1429: mov     [rbp+var_38], rax
0x142d: jmp     loc_132E
0x1432: nop
0x1433: jmp     short loc_1436
0x1435: nop
0x1436: sub     [rbp+var_40], 1
0x143b: cmp     [rbp+var_40], 0
0x1440: jnz     loc_12EA
0x1446: jmp     short loc_1449
0x1448: nop
0x1449: pop     rbp
0x144a: retn