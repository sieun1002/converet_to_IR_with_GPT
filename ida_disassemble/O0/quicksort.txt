; Function: quick_sort
; Start: 0x1189, End: 0x1325

0x00001189: endbr64
0x0000118D: push    rbp
0x0000118E: mov     rbp, rsp
0x00001191: sub     rsp, 40h
0x00001195: mov     [rbp+var_28], rdi
0x00001199: mov     [rbp+var_30], rsi
0x0000119D: mov     [rbp+var_38], rdx
0x000011A1: jmp     loc_1313
loc_11A6:
0x000011A6: mov     rax, [rbp+var_30]
0x000011AA: mov     [rbp+var_10], rax
0x000011AE: mov     rax, [rbp+var_38]
0x000011B2: mov     [rbp+var_8], rax
0x000011B6: mov     rax, [rbp+var_38]
0x000011BA: sub     rax, [rbp+var_30]
0x000011BE: mov     rdx, rax
0x000011C1: shr     rdx, 3Fh
0x000011C5: add     rax, rdx
0x000011C8: sar     rax, 1
0x000011CB: mov     rdx, rax
0x000011CE: mov     rax, [rbp+var_30]
0x000011D2: add     rax, rdx
0x000011D5: lea     rdx, ds:0[rax*4]
0x000011DD: mov     rax, [rbp+var_28]
0x000011E1: add     rax, rdx
0x000011E4: mov     eax, [rax]
0x000011E6: mov     [rbp+var_18], eax
0x000011E9: jmp     short loc_11F0
loc_11EB:
0x000011EB: add     [rbp+var_10], 1
loc_11F0:
0x000011F0: mov     rax, [rbp+var_10]
0x000011F4: lea     rdx, ds:0[rax*4]
0x000011FC: mov     rax, [rbp+var_28]
0x00001200: add     rax, rdx
0x00001203: mov     eax, [rax]
0x00001205: cmp     [rbp+var_18], eax
0x00001208: jg      short loc_11EB
0x0000120A: jmp     short loc_1211
loc_120C:
0x0000120C: sub     [rbp+var_8], 1
loc_1211:
0x00001211: mov     rax, [rbp+var_8]
0x00001215: lea     rdx, ds:0[rax*4]
0x0000121D: mov     rax, [rbp+var_28]
0x00001221: add     rax, rdx
0x00001224: mov     eax, [rax]
0x00001226: cmp     [rbp+var_18], eax
0x00001229: jl      short loc_120C
0x0000122B: mov     rax, [rbp+var_10]
0x0000122F: cmp     rax, [rbp+var_8]
0x00001233: jg      short loc_1299
0x00001235: mov     rax, [rbp+var_10]
0x00001239: lea     rdx, ds:0[rax*4]
0x00001241: mov     rax, [rbp+var_28]
0x00001245: add     rax, rdx
0x00001248: mov     eax, [rax]
0x0000124A: mov     [rbp+var_14], eax
0x0000124D: mov     rax, [rbp+var_8]
0x00001251: lea     rdx, ds:0[rax*4]
0x00001259: mov     rax, [rbp+var_28]
0x0000125D: add     rax, rdx
0x00001260: mov     rdx, [rbp+var_10]
0x00001264: lea     rcx, ds:0[rdx*4]
0x0000126C: mov     rdx, [rbp+var_28]
0x00001270: add     rdx, rcx
0x00001273: mov     eax, [rax]
0x00001275: mov     [rdx], eax
0x00001277: mov     rax, [rbp+var_8]
0x0000127B: lea     rdx, ds:0[rax*4]
0x00001283: mov     rax, [rbp+var_28]
0x00001287: add     rdx, rax
0x0000128A: mov     eax, [rbp+var_14]
0x0000128D: mov     [rdx], eax
0x0000128F: add     [rbp+var_10], 1
0x00001294: sub     [rbp+var_8], 1
loc_1299:
0x00001299: mov     rax, [rbp+var_10]
0x0000129D: cmp     rax, [rbp+var_8]
0x000012A1: jle     loc_11F0
0x000012A7: mov     rax, [rbp+var_8]
0x000012AB: sub     rax, [rbp+var_30]
0x000012AF: mov     rdx, rax
0x000012B2: mov     rax, [rbp+var_38]
0x000012B6: sub     rax, [rbp+var_10]
0x000012BA: cmp     rdx, rax
0x000012BD: jge     short loc_12EA
0x000012BF: mov     rax, [rbp+var_30]
0x000012C3: cmp     rax, [rbp+var_8]
0x000012C7: jge     short loc_12E0
0x000012C9: mov     rdx, [rbp+var_8]
0x000012CD: mov     rcx, [rbp+var_30]
0x000012D1: mov     rax, [rbp+var_28]
0x000012D5: mov     rsi, rcx
0x000012D8: mov     rdi, rax
0x000012DB: call    quick_sort
loc_12E0:
0x000012E0: mov     rax, [rbp+var_10]
0x000012E4: mov     [rbp+var_30], rax
0x000012E8: jmp     short loc_1313
loc_12EA:
0x000012EA: mov     rax, [rbp+var_10]
0x000012EE: cmp     rax, [rbp+var_38]
0x000012F2: jge     short loc_130B
0x000012F4: mov     rdx, [rbp+var_38]
0x000012F8: mov     rcx, [rbp+var_10]
0x000012FC: mov     rax, [rbp+var_28]
0x00001300: mov     rsi, rcx
0x00001303: mov     rdi, rax
0x00001306: call    quick_sort
loc_130B:
0x0000130B: mov     rax, [rbp+var_8]
0x0000130F: mov     [rbp+var_38], rax
loc_1313:
0x00001313: mov     rax, [rbp+var_30]
0x00001317: cmp     rax, [rbp+var_38]
0x0000131B: jl      loc_11A6
0x00001321: nop
0x00001322: nop
0x00001323: leave
0x00001324: retn