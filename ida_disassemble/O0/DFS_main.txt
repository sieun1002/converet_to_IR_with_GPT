; Function: dfs
; Start: 0x11C9, End: 0x14AE

0x000011C9: endbr64
0x000011CD: push    rbp
0x000011CE: mov     rbp, rsp
0x000011D1: sub     rsp, 70h
0x000011D5: mov     [rbp+var_48], rdi
0x000011D9: mov     [rbp+var_50], rsi
0x000011DD: mov     [rbp+var_58], rdx
0x000011E1: mov     [rbp+var_60], rcx
0x000011E5: mov     [rbp+var_68], r8
0x000011E9: cmp     [rbp+var_50], 0
0x000011EE: jz      short loc_11FA
0x000011F0: mov     rax, [rbp+var_58]
0x000011F4: cmp     rax, [rbp+var_50]
0x000011F8: jb      short loc_120A
loc_11FA:
0x000011FA: mov     rax, [rbp+var_68]
0x000011FE: mov     qword ptr [rax], 0
0x00001205: jmp     locret_14AC
loc_120A:
0x0000120A: mov     rax, [rbp+var_50]
0x0000120E: shl     rax, 2
0x00001212: mov     rdi, rax; size
0x00001215: call    _malloc
0x0000121A: mov     [rbp+ptr], rax
0x0000121E: mov     rax, [rbp+var_50]
0x00001222: shl     rax, 3
0x00001226: mov     rdi, rax; size
0x00001229: call    _malloc
0x0000122E: mov     [rbp+var_18], rax
0x00001232: mov     rax, [rbp+var_50]
0x00001236: shl     rax, 3
0x0000123A: mov     rdi, rax; size
0x0000123D: call    _malloc
0x00001242: mov     [rbp+var_10], rax
0x00001246: cmp     [rbp+ptr], 0
0x0000124B: jz      short loc_125B
0x0000124D: cmp     [rbp+var_18], 0
0x00001252: jz      short loc_125B
0x00001254: cmp     [rbp+var_10], 0
0x00001259: jnz     short loc_128F
loc_125B:
0x0000125B: mov     rax, [rbp+ptr]
0x0000125F: mov     rdi, rax; ptr
0x00001262: call    _free
0x00001267: mov     rax, [rbp+var_18]
0x0000126B: mov     rdi, rax; ptr
0x0000126E: call    _free
0x00001273: mov     rax, [rbp+var_10]
0x00001277: mov     rdi, rax; ptr
0x0000127A: call    _free
0x0000127F: mov     rax, [rbp+var_68]
0x00001283: mov     qword ptr [rax], 0
0x0000128A: jmp     locret_14AC
loc_128F:
0x0000128F: mov     [rbp+var_38], 0
0x00001297: jmp     short loc_12D1
loc_1299:
0x00001299: mov     rax, [rbp+var_38]
0x0000129D: lea     rdx, ds:0[rax*4]
0x000012A5: mov     rax, [rbp+ptr]
0x000012A9: add     rax, rdx
0x000012AC: mov     dword ptr [rax], 0
0x000012B2: mov     rax, [rbp+var_38]
0x000012B6: lea     rdx, ds:0[rax*8]
0x000012BE: mov     rax, [rbp+var_18]
0x000012C2: add     rax, rdx
0x000012C5: mov     qword ptr [rax], 0
0x000012CC: add     [rbp+var_38], 1
loc_12D1:
0x000012D1: mov     rax, [rbp+var_38]
0x000012D5: cmp     rax, [rbp+var_50]
0x000012D9: jb      short loc_1299
0x000012DB: mov     [rbp+var_30], 0
0x000012E3: mov     rax, [rbp+var_68]
0x000012E7: mov     qword ptr [rax], 0
0x000012EE: mov     rax, [rbp+var_30]
0x000012F2: lea     rdx, [rax+1]
0x000012F6: mov     [rbp+var_30], rdx
0x000012FA: lea     rdx, ds:0[rax*8]
0x00001302: mov     rax, [rbp+var_10]
0x00001306: add     rdx, rax
0x00001309: mov     rax, [rbp+var_58]
0x0000130D: mov     [rdx], rax
0x00001310: mov     rax, [rbp+var_58]
0x00001314: lea     rdx, ds:0[rax*4]
0x0000131C: mov     rax, [rbp+ptr]
0x00001320: add     rax, rdx
0x00001323: mov     dword ptr [rax], 1
0x00001329: mov     rax, [rbp+var_68]
0x0000132D: mov     rax, [rax]
0x00001330: lea     rcx, [rax+1]
0x00001334: mov     rdx, [rbp+var_68]
0x00001338: mov     [rdx], rcx
0x0000133B: lea     rdx, ds:0[rax*8]
0x00001343: mov     rax, [rbp+var_60]
0x00001347: add     rdx, rax
0x0000134A: mov     rax, [rbp+var_58]
0x0000134E: mov     [rdx], rax
0x00001351: jmp     loc_147D
loc_1356:
0x00001356: mov     rax, [rbp+var_30]
0x0000135A: shl     rax, 3
0x0000135E: lea     rdx, [rax-8]
0x00001362: mov     rax, [rbp+var_10]
0x00001366: add     rax, rdx
0x00001369: mov     rax, [rax]
0x0000136C: mov     [rbp+var_8], rax
0x00001370: mov     rax, [rbp+var_8]
0x00001374: lea     rdx, ds:0[rax*8]
0x0000137C: mov     rax, [rbp+var_18]
0x00001380: add     rax, rdx
0x00001383: mov     rax, [rax]
0x00001386: mov     [rbp+var_28], rax
0x0000138A: jmp     loc_1460
loc_138F:
0x0000138F: mov     rax, [rbp+var_8]
0x00001393: imul    rax, [rbp+var_50]
0x00001398: mov     rdx, rax
0x0000139B: mov     rax, [rbp+var_28]
0x0000139F: add     rax, rdx
0x000013A2: lea     rdx, ds:0[rax*4]
0x000013AA: mov     rax, [rbp+var_48]
0x000013AE: add     rax, rdx
0x000013B1: mov     eax, [rax]
0x000013B3: test    eax, eax
0x000013B5: jz      loc_145B
0x000013BB: mov     rax, [rbp+var_28]
0x000013BF: lea     rdx, ds:0[rax*4]
0x000013C7: mov     rax, [rbp+ptr]
0x000013CB: add     rax, rdx
0x000013CE: mov     eax, [rax]
0x000013D0: test    eax, eax
0x000013D2: jnz     loc_145B
0x000013D8: mov     rax, [rbp+var_8]
0x000013DC: lea     rdx, ds:0[rax*8]
0x000013E4: mov     rax, [rbp+var_18]
0x000013E8: add     rax, rdx
0x000013EB: mov     rdx, [rbp+var_28]
0x000013EF: add     rdx, 1
0x000013F3: mov     [rax], rdx
0x000013F6: mov     rax, [rbp+var_28]
0x000013FA: lea     rdx, ds:0[rax*4]
0x00001402: mov     rax, [rbp+ptr]
0x00001406: add     rax, rdx
0x00001409: mov     dword ptr [rax], 1
0x0000140F: mov     rax, [rbp+var_68]
0x00001413: mov     rax, [rax]
0x00001416: lea     rcx, [rax+1]
0x0000141A: mov     rdx, [rbp+var_68]
0x0000141E: mov     [rdx], rcx
0x00001421: lea     rdx, ds:0[rax*8]
0x00001429: mov     rax, [rbp+var_60]
0x0000142D: add     rdx, rax
0x00001430: mov     rax, [rbp+var_28]
0x00001434: mov     [rdx], rax
0x00001437: mov     rax, [rbp+var_30]
0x0000143B: lea     rdx, [rax+1]
0x0000143F: mov     [rbp+var_30], rdx
0x00001443: lea     rdx, ds:0[rax*8]
0x0000144B: mov     rax, [rbp+var_10]
0x0000144F: add     rdx, rax
0x00001452: mov     rax, [rbp+var_28]
0x00001456: mov     [rdx], rax
0x00001459: jmp     short loc_146E
loc_145B:
0x0000145B: add     [rbp+var_28], 1
loc_1460:
0x00001460: mov     rax, [rbp+var_28]
0x00001464: cmp     rax, [rbp+var_50]
0x00001468: jb      loc_138F
loc_146E:
0x0000146E: mov     rax, [rbp+var_28]
0x00001472: cmp     rax, [rbp+var_50]
0x00001476: jnz     short loc_147D
0x00001478: sub     [rbp+var_30], 1
loc_147D:
0x0000147D: cmp     [rbp+var_30], 0
0x00001482: jnz     loc_1356
0x00001488: mov     rax, [rbp+ptr]
0x0000148C: mov     rdi, rax; ptr
0x0000148F: call    _free
0x00001494: mov     rax, [rbp+var_18]
0x00001498: mov     rdi, rax; ptr
0x0000149B: call    _free
0x000014A0: mov     rax, [rbp+var_10]
0x000014A4: mov     rdi, rax; ptr
0x000014A7: call    _free
locret_14AC:
0x000014AC: leave
0x000014AD: retn