; Function: bfs
; Start: 0x11C9, End: 0x13DD

0x000011C9: endbr64
0x000011CD: push    rbp
0x000011CE: mov     rbp, rsp
0x000011D1: sub     rsp, 60h
0x000011D5: mov     [rbp+var_38], rdi
0x000011D9: mov     [rbp+var_40], rsi
0x000011DD: mov     [rbp+var_48], rdx
0x000011E1: mov     [rbp+var_50], rcx
0x000011E5: mov     [rbp+var_58], r8
0x000011E9: mov     [rbp+var_60], r9
0x000011ED: cmp     [rbp+var_40], 0
0x000011F2: jz      short loc_11FE
0x000011F4: mov     rax, [rbp+var_48]
0x000011F8: cmp     rax, [rbp+var_40]
0x000011FC: jb      short loc_120E
loc_11FE:
0x000011FE: mov     rax, [rbp+var_60]
0x00001202: mov     qword ptr [rax], 0
0x00001209: jmp     locret_13DB
loc_120E:
0x0000120E: mov     [rbp+var_30], 0
0x00001216: jmp     short loc_1236
loc_1218:
0x00001218: mov     rax, [rbp+var_30]
0x0000121C: lea     rdx, ds:0[rax*4]
0x00001224: mov     rax, [rbp+var_50]
0x00001228: add     rax, rdx
0x0000122B: mov     dword ptr [rax], 0FFFFFFFFh
0x00001231: add     [rbp+var_30], 1
loc_1236:
0x00001236: mov     rax, [rbp+var_30]
0x0000123A: cmp     rax, [rbp+var_40]
0x0000123E: jb      short loc_1218
0x00001240: mov     rax, [rbp+var_40]
0x00001244: shl     rax, 3
0x00001248: mov     rdi, rax; size
0x0000124B: call    _malloc
0x00001250: mov     [rbp+ptr], rax
0x00001254: cmp     [rbp+ptr], 0
0x00001259: jnz     short loc_126B
0x0000125B: mov     rax, [rbp+var_60]
0x0000125F: mov     qword ptr [rax], 0
0x00001266: jmp     locret_13DB
loc_126B:
0x0000126B: mov     [rbp+var_28], 0
0x00001273: mov     [rbp+var_20], 0
0x0000127B: mov     rax, [rbp+var_48]
0x0000127F: lea     rdx, ds:0[rax*4]
0x00001287: mov     rax, [rbp+var_50]
0x0000128B: add     rax, rdx
0x0000128E: mov     dword ptr [rax], 0
0x00001294: mov     rax, [rbp+var_20]
0x00001298: lea     rdx, [rax+1]
0x0000129C: mov     [rbp+var_20], rdx
0x000012A0: lea     rdx, ds:0[rax*8]
0x000012A8: mov     rax, [rbp+ptr]
0x000012AC: add     rdx, rax
0x000012AF: mov     rax, [rbp+var_48]
0x000012B3: mov     [rdx], rax
0x000012B6: mov     rax, [rbp+var_60]
0x000012BA: mov     qword ptr [rax], 0
0x000012C1: jmp     loc_13C1
loc_12C6:
0x000012C6: mov     rax, [rbp+var_28]
0x000012CA: lea     rdx, [rax+1]
0x000012CE: mov     [rbp+var_28], rdx
0x000012D2: lea     rdx, ds:0[rax*8]
0x000012DA: mov     rax, [rbp+ptr]
0x000012DE: add     rax, rdx
0x000012E1: mov     rax, [rax]
0x000012E4: mov     [rbp+var_8], rax
0x000012E8: mov     rax, [rbp+var_60]
0x000012EC: mov     rax, [rax]
0x000012EF: lea     rcx, [rax+1]
0x000012F3: mov     rdx, [rbp+var_60]
0x000012F7: mov     [rdx], rcx
0x000012FA: lea     rdx, ds:0[rax*8]
0x00001302: mov     rax, [rbp+var_58]
0x00001306: add     rdx, rax
0x00001309: mov     rax, [rbp+var_8]
0x0000130D: mov     [rdx], rax
0x00001310: mov     [rbp+var_18], 0
0x00001318: jmp     loc_13B3
loc_131D:
0x0000131D: mov     rax, [rbp+var_8]
0x00001321: imul    rax, [rbp+var_40]
0x00001326: mov     rdx, rax
0x00001329: mov     rax, [rbp+var_18]
0x0000132D: add     rax, rdx
0x00001330: lea     rdx, ds:0[rax*4]
0x00001338: mov     rax, [rbp+var_38]
0x0000133C: add     rax, rdx
0x0000133F: mov     eax, [rax]
0x00001341: test    eax, eax
0x00001343: jz      short loc_13AE
0x00001345: mov     rax, [rbp+var_18]
0x00001349: lea     rdx, ds:0[rax*4]
0x00001351: mov     rax, [rbp+var_50]
0x00001355: add     rax, rdx
0x00001358: mov     eax, [rax]
0x0000135A: cmp     eax, 0FFFFFFFFh
0x0000135D: jnz     short loc_13AE
0x0000135F: mov     rax, [rbp+var_8]
0x00001363: lea     rdx, ds:0[rax*4]
0x0000136B: mov     rax, [rbp+var_50]
0x0000136F: add     rax, rdx
0x00001372: mov     edx, [rax]
0x00001374: mov     rax, [rbp+var_18]
0x00001378: lea     rcx, ds:0[rax*4]
0x00001380: mov     rax, [rbp+var_50]
0x00001384: add     rax, rcx
0x00001387: add     edx, 1
0x0000138A: mov     [rax], edx
0x0000138C: mov     rax, [rbp+var_20]
0x00001390: lea     rdx, [rax+1]
0x00001394: mov     [rbp+var_20], rdx
0x00001398: lea     rdx, ds:0[rax*8]
0x000013A0: mov     rax, [rbp+ptr]
0x000013A4: add     rdx, rax
0x000013A7: mov     rax, [rbp+var_18]
0x000013AB: mov     [rdx], rax
loc_13AE:
0x000013AE: add     [rbp+var_18], 1
loc_13B3:
0x000013B3: mov     rax, [rbp+var_18]
0x000013B7: cmp     rax, [rbp+var_40]
0x000013BB: jb      loc_131D
loc_13C1:
0x000013C1: mov     rax, [rbp+var_28]
0x000013C5: cmp     rax, [rbp+var_20]
0x000013C9: jb      loc_12C6
0x000013CF: mov     rax, [rbp+ptr]
0x000013D3: mov     rdi, rax; ptr
0x000013D6: call    _free
locret_13DB:
0x000013DB: leave
0x000013DC: retn