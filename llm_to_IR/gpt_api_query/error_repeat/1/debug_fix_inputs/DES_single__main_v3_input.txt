; === ERROR LOG BEGIN [llvm-as] ===
; llvm-as-14: ../../llm_to_IR/gpt_api_query/error_repeat/1/DES_single__main2.ll:15:33: error: expected type
;   %fmt = getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)
;                                 ^
; === ERROR LOG END ===

; ModuleID = 'module.ll'
source_filename = "module"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [21 x i8] c"Ciphertext: %016llX\0A\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"Ciphertext: 85E813540F0AB405\00", align 1

declare i64 @des_encrypt(i64, i64)
declare i32 @printf(i8*, ...)
declare i32 @puts(i8*)

define i32 @main(i32 %argc, i8** %argv) {
entry:
  %ct = call i64 @des_encrypt(i64 81985529216486895, i64 1383827165325090801)
  %fmt = getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)
  %call_printf = call i32 (i8*, ...) @printf(i8* %fmt, i64 %ct)
  %s = getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0)
  %call_puts = call i32 @puts(i8* %s)
  ret i32 0
}